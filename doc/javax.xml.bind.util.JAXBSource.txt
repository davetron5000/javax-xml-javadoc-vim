*javax.xml.bind.util.JAXBSource* *JAXBSource* JAXPjavax.xml.transform.Sourceimplementation
 that marshals a JAXB-generated objec

public class JAXBSource
  extends    |javax.xml.transform.sax.SAXSource|

|javax.xml.bind.util.JAXBSource_Description|
|javax.xml.bind.util.JAXBSource_Fields|
|javax.xml.bind.util.JAXBSource_Constructors|
|javax.xml.bind.util.JAXBSource_Methods|

================================================================================================================================

*javax.xml.bind.util.JAXBSource_Constructors*
|javax.xml.bind.util.JAXBSource(JAXBContext,Object)|Creates a newjavax.xml.transform.Sourcefor the given content object.
|javax.xml.bind.util.JAXBSource(Marshaller,Object)|Creates a newjavax.xml.transform.Sourcefor the given content object.

*javax.xml.bind.util.JAXBSource_Description*

JAXP (|javax.xml.transform.Source|) implementation that marshals a JAXB-generated object. 

This utility class is useful to combine JAXB with other Java/XML technologies. 

The following example shows how to use JAXB to marshal a document for transformation by XSLT. 



MyObject o = // get JAXB content tree 

// jaxbContext is a JAXBContext object from which 'o' is created. JAXBSource source = new JAXBSource( jaxbContext, o ); 

// set up XSLT transformation TransformerFactory tf = TransformerFactory.newInstance(); Transformer t = tf.newTransformer(new 
StreamSource("test.xsl")); 

// run transformation t.transform(source,new StreamResult(System.out)); 



The fact that JAXBSource derives from SAXSource is an implementation detail. Thus in general applications are strongly 
discouraged from accessing methods defined on SAXSource. In particular, the setXMLReader and setInputSource methods shall never 
be called. The XMLReader object obtained by the getXMLReader method shall be used only for parsing the InputSource object 
returned by the getInputSource method. 

Similarly the InputSource object obtained by the getInputSource method shall be used only for being parsed by the XMLReader 
object returned by the getXMLReader. 



*javax.xml.bind.util.JAXBSource(JAXBContext,Object)*

public JAXBSource(
  javax.xml.bind.JAXBContext context,
  java.lang.Object contentObject)
  throws |javax.xml.bind.JAXBException|
         
Creates a new (|javax.xml.transform.Source|) for the given content object. 

    context - JAXBContext that was used to create contentObject. This context is used to create a new instance of marshaller and must not be 
       null. 
    contentObject - An instance of a JAXB-generated class, which will be used as a {@link javax.xml.transform.Source} (by marshalling it into XML). 
       It must not be null. 

*javax.xml.bind.util.JAXBSource(Marshaller,Object)*

public JAXBSource(
  javax.xml.bind.Marshaller marshaller,
  java.lang.Object contentObject)
  throws |javax.xml.bind.JAXBException|
         
Creates a new (|javax.xml.transform.Source|) for the given content object. 

    marshaller - A marshaller instance that will be used to marshal contentObject into XML. This must be created from a JAXBContext that was 
       used to build contentObject and must not be null. 
    contentObject - An instance of a JAXB-generated class, which will be used as a {@link javax.xml.transform.Source} (by marshalling it into XML). 
       It must not be null. 

