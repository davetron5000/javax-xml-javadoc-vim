*javax.xml.bind.SchemaOutputResolver* *SchemaOutputResolver* Controls where a JAXB implementation puts the generates
 schema fil

public abstract class SchemaOutputResolver
  extends    |java.lang.Object|

|javax.xml.bind.SchemaOutputResolver_Description|
|javax.xml.bind.SchemaOutputResolver_Fields|
|javax.xml.bind.SchemaOutputResolver_Constructors|
|javax.xml.bind.SchemaOutputResolver_Methods|

================================================================================================================================

*javax.xml.bind.SchemaOutputResolver_Constructors*
|javax.xml.bind.SchemaOutputResolver()|

*javax.xml.bind.SchemaOutputResolver_Methods*
|javax.xml.bind.SchemaOutputResolver.createOutput(String,String)|Decides where the schema file (of the given namespace URI)  wi

*javax.xml.bind.SchemaOutputResolver_Description*

Controls where a JAXB implementation puts the generates schema files. 

An implementation of this abstract class has to be provided by the calling application to generate schemas. 

This is a class, not an interface so as to allow future versions to evolve without breaking the compatibility. 



*javax.xml.bind.SchemaOutputResolver()*

public SchemaOutputResolver()




*javax.xml.bind.SchemaOutputResolver.createOutput(String,String)*

public abstract |javax.xml.transform.Result| createOutput(
  java.lang.String namespaceUri,
  java.lang.String suggestedFileName)
  throws |java.io.IOException|
         
Decides where the schema file (of the given namespace URI) will be written, and return it as a (|javax.xml.transform.Result|) 
object. 

This method is called only once for any given namespace. IOW, all the components in one namespace is always written into the 
same schema document. 


    namespaceUri - The namespace URI that the schema declares. Can be the empty string, but never be null. 
    suggestedFileName - A JAXB implementation generates an unique file name (like "schema1.xsd") for the convenience of the callee. This name can be 
       used for the file name of the schema, or the callee can just ignore this name and come up with its own name. This is 
       just a hint. 

    Returns: a {@link Result} object that encapsulates the actual destination of the schema. 

If the {@link Result} object has a system ID, it must be an absolute system ID. Those system IDs are relativized by the caller 
             and used for <xs:import> statements. 

If the {@link Result} object does not have a system ID, a schema for the namespace URI is generated but it won't be explicitly 
             <xs:import>ed from other schemas. 

If {@code null} is returned, the schema generation for this namespace URI will be skipped. 


