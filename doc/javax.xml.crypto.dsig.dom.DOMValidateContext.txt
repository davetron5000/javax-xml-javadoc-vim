*javax.xml.crypto.dsig.dom.DOMValidateContext* *DOMValidateContext* A DOM-specificXMLValidateContext.

public class DOMValidateContext
  extends    |javax.xml.crypto.dom.DOMCryptoContext|
  implements |javax.xml.crypto.dsig.XMLValidateContext|

|javax.xml.crypto.dsig.dom.DOMValidateContext_Description|
|javax.xml.crypto.dsig.dom.DOMValidateContext_Fields|
|javax.xml.crypto.dsig.dom.DOMValidateContext_Constructors|
|javax.xml.crypto.dsig.dom.DOMValidateContext_Methods|

================================================================================================================================

*javax.xml.crypto.dsig.dom.DOMValidateContext_Constructors*
|javax.xml.crypto.dsig.dom.DOMValidateContext(Key,Node)|Creates a DOMValidateContext containing the specified key  and node.
|javax.xml.crypto.dsig.dom.DOMValidateContext(KeySelector,Node)|Creates a DOMValidateContext containing the specified key  sele

*javax.xml.crypto.dsig.dom.DOMValidateContext_Methods*
|javax.xml.crypto.dsig.dom.DOMValidateContext.getNode()|Returns the node.
|javax.xml.crypto.dsig.dom.DOMValidateContext.setNode(Node)|Sets the node.

*javax.xml.crypto.dsig.dom.DOMValidateContext_Description*

A DOM-specific (|javax.xml.crypto.dsig.XMLValidateContext|) . This class contains additional methods to specify the location in 
a DOM tree where an (|javax.xml.crypto.dsig.XMLSignature|) is to be unmarshalled and validated from. 

Note that the behavior of an unmarshalled XMLSignature is undefined if the contents of the underlying DOM tree are modified by 
the caller after the XMLSignature is created. 

Also, note that DOMValidateContext instances can contain information and state specific to the XML signature structure it is 
used with. The results are unpredictable if a DOMValidateContext is used with different signature structures (for example, you 
should not use the same DOMValidateContext instance to validate two different (|javax.xml.crypto.dsig.XMLSignature|) objects). 



*javax.xml.crypto.dsig.dom.DOMValidateContext(Key,Node)*

public DOMValidateContext(
  java.security.Key validatingKey,
  org.w3c.dom.Node node)

Creates a DOMValidateContext containing the specified key and node. The validating key will be stored in a singleton 
KeySelector(|javax.xml.crypto.KeySelector|) that is returned when the 
getKeySelector(|javax.xml.crypto.dsig.dom.DOMValidateContext|) method is called. 

    validatingKey - the validating key 
    node - the node 

*javax.xml.crypto.dsig.dom.DOMValidateContext(KeySelector,Node)*

public DOMValidateContext(
  javax.xml.crypto.KeySelector ks,
  org.w3c.dom.Node node)

Creates a DOMValidateContext containing the specified key selector and node. 

    ks - a key selector for finding a validation key 
    node - the node 

*javax.xml.crypto.dsig.dom.DOMValidateContext.getNode()*

public |org.w3c.dom.Node| getNode()

Returns the node. 



    Returns: the node (never null) 

*javax.xml.crypto.dsig.dom.DOMValidateContext.setNode(Node)*

public void setNode(org.w3c.dom.Node node)

Sets the node. 


    node - the node 


