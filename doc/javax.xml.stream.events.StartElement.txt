*javax.xml.stream.events.StartElement* *StartElement* The StartElement interface provides access to information about
 start ele

public interface interface StartElement

  implements |javax.xml.stream.events.XMLEvent|

|javax.xml.stream.events.StartElement_Description|
|javax.xml.stream.events.StartElement_Fields|
|javax.xml.stream.events.StartElement_Constructors|
|javax.xml.stream.events.StartElement_Methods|

================================================================================================================================

*javax.xml.stream.events.StartElement_Methods*
|javax.xml.stream.events.StartElement.getAttributeByName(QName)|Returns the attribute referred to by this name
|javax.xml.stream.events.StartElement.getAttributes()|Returns an Iterator of non-namespace declared attributes declared on   th
|javax.xml.stream.events.StartElement.getName()|Get the name of this event
|javax.xml.stream.events.StartElement.getNamespaceContext()|Gets a read-only namespace context.
|javax.xml.stream.events.StartElement.getNamespaces()|Returns an Iterator of namespaces declared on this element.
|javax.xml.stream.events.StartElement.getNamespaceURI(String)|Gets the value that the prefix is bound to in the  context of thi

*javax.xml.stream.events.StartElement_Description*

The StartElement interface provides access to information about start elements. A StartElement is reported for each Start Tag 
in the document. 



*javax.xml.stream.events.StartElement.getAttributeByName(QName)*

public |javax.xml.stream.events.Attribute| getAttributeByName(javax.xml.namespace.QName name)

Returns the attribute referred to by this name 


    name - the qname of the desired name 

    Returns: the attribute corresponding to the name value or null 

*javax.xml.stream.events.StartElement.getAttributes()*

public |java.util.Iterator| getAttributes()

Returns an Iterator of non-namespace declared attributes declared on this START_ELEMENT, returns an empty iterator if there are 
no attributes. The iterator must contain only implementations of the javax.xml.stream.Attribute interface. Attributes are 
fundamentally unordered and may not be reported in any order. 



    Returns: a readonly Iterator over Attribute interfaces, or an empty iterator 

*javax.xml.stream.events.StartElement.getName()*

public |javax.xml.namespace.QName| getName()

Get the name of this event 



    Returns: the qualified name of this event 

*javax.xml.stream.events.StartElement.getNamespaceContext()*

public |javax.xml.namespace.NamespaceContext| getNamespaceContext()

Gets a read-only namespace context. If no context is available this method will return an empty namespace context. The 
NamespaceContext contains information about all namespaces in scope for this StartElement. 



    Returns: the current namespace context 

*javax.xml.stream.events.StartElement.getNamespaces()*

public |java.util.Iterator| getNamespaces()

Returns an Iterator of namespaces declared on this element. This Iterator does not contain previously declared namespaces 
unless they appear on the current START_ELEMENT. Therefore this list may contain redeclared namespaces and duplicate namespace 
declarations. Use the getNamespaceContext() method to get the current context of namespace declarations. 

The iterator must contain only implementations of the javax.xml.stream.Namespace interface. 

A Namespace isA Attribute. One can iterate over a list of namespaces as a list of attributes. However this method returns only 
the list of namespaces declared on this START_ELEMENT and does not include the attributes declared on this START_ELEMENT. 

Returns an empty iterator if there are no namespaces. 



    Returns: a readonly Iterator over Namespace interfaces, or an empty iterator 

*javax.xml.stream.events.StartElement.getNamespaceURI(String)*

public |java.lang.String| getNamespaceURI(java.lang.String prefix)

Gets the value that the prefix is bound to in the context of this element. Returns null if the prefix is not bound in this 
context 


    prefix - the prefix to lookup 

    Returns: the uri bound to the prefix or null 


