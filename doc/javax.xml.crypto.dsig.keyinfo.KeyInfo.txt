*javax.xml.crypto.dsig.keyinfo.KeyInfo* *KeyInfo* A representation of the XML KeyInfo element as defined in
 the 
 W3C Recommend

public interface interface KeyInfo

  implements |javax.xml.crypto.XMLStructure|

|javax.xml.crypto.dsig.keyinfo.KeyInfo_Description|
|javax.xml.crypto.dsig.keyinfo.KeyInfo_Fields|
|javax.xml.crypto.dsig.keyinfo.KeyInfo_Constructors|
|javax.xml.crypto.dsig.keyinfo.KeyInfo_Methods|

================================================================================================================================

*javax.xml.crypto.dsig.keyinfo.KeyInfo_Methods*
|javax.xml.crypto.dsig.keyinfo.KeyInfo.getContent()|Returns anjava.util.Collections#unmodifiableList unmodifiable   listcontain
|javax.xml.crypto.dsig.keyinfo.KeyInfo.getId()|Return the optional Id attribute of this KeyInfo, which  may be useful for refer
|javax.xml.crypto.dsig.keyinfo.KeyInfo.marshal(XMLStructure,XMLCryptoContext)|Marshals the key info to XML.

*javax.xml.crypto.dsig.keyinfo.KeyInfo_Description*

A representation of the XML KeyInfo element as defined in the W3C Recommendation for XML-Signature Syntax and Processing. A 
KeyInfo contains a list of (|javax.xml.crypto.XMLStructure|) s, each of which contain information that enables the recipient(s) 
to obtain the key needed to validate an XML signature. The XML Schema Definition is defined as: 



<element name="KeyInfo" type="ds:KeyInfoType"/> <complexType name="KeyInfoType" mixed="true"> <choice maxOccurs="unbounded"> 
<element ref="ds:KeyName"/> <element ref="ds:KeyValue"/> <element ref="ds:RetrievalMethod"/> <element ref="ds:X509Data"/> 
<element ref="ds:PGPData"/> <element ref="ds:SPKIData"/> <element ref="ds:MgmtData"/> <any processContents="lax" 
namespace="##other"/> <!-- (1,1) elements from (0,unbounded) namespaces --> </choice> <attribute name="Id" type="ID" 
use="optional"/> </complexType> 

A KeyInfo instance may be created by invoking one of the newKeyInfo(|javax.xml.crypto.dsig.keyinfo.KeyInfoFactory|) methods of 
the (|javax.xml.crypto.dsig.keyinfo.KeyInfoFactory|) class, and passing it a list of one or more XMLStructures and an optional 
id parameter; for example: 

KeyInfoFactory factory = KeyInfoFactory.getInstance("DOM"); KeyInfo keyInfo = factory.newKeyInfo 
(Collections.singletonList(factory.newKeyName("Alice"), "keyinfo-1")); 

KeyInfo objects can also be marshalled to XML by invoking the marshal(|javax.xml.crypto.dsig.keyinfo.KeyInfo|) method. 



*javax.xml.crypto.dsig.keyinfo.KeyInfo.getContent()*

public |java.util.List| getContent()

Returns an unmodifiable list(|java.util.Collections|) containing the key information. Each entry of the list is an 
(|javax.xml.crypto.XMLStructure|) . 

If there is a public subclass representing the type of XMLStructure, it is returned as an instance of that class (ex: an 
X509Data element would be returned as an instance of (|javax.xml.crypto.dsig.keyinfo.X509Data|) ). 



    Returns: an unmodifiable list of one or more XMLStructures in this KeyInfo. Never returns null or an empty list. 

*javax.xml.crypto.dsig.keyinfo.KeyInfo.getId()*

public |java.lang.String| getId()

Return the optional Id attribute of this KeyInfo, which may be useful for referencing this KeyInfo from other XML structures. 



    Returns: the Id attribute of this KeyInfo (may be null if not specified) 

*javax.xml.crypto.dsig.keyinfo.KeyInfo.marshal(XMLStructure,XMLCryptoContext)*

public void marshal(
  javax.xml.crypto.XMLStructure parent,
  javax.xml.crypto.XMLCryptoContext context)
  throws |javax.xml.crypto.MarshalException|
         
Marshals the key info to XML. 


    parent - a mechanism-specific structure containing the parent node that the marshalled key info will be appended to 
    context - the XMLCryptoContext containing additional context (may be null if not applicable) 


