*javax.xml.soap.Node* *Node* A representation of a node (element) in an XML document.

public interface interface Node

  implements |org.w3c.dom.Node|

|javax.xml.soap.Node_Description|
|javax.xml.soap.Node_Fields|
|javax.xml.soap.Node_Constructors|
|javax.xml.soap.Node_Methods|

================================================================================================================================

*javax.xml.soap.Node_Methods*
|javax.xml.soap.Node.detachNode()|Removes this Node object from the tree.
|javax.xml.soap.Node.getParentElement()|Returns the parent element of this Node object.
|javax.xml.soap.Node.getValue()|Returns the value of this node if this is a Text node or the  value of the immediate child of t
|javax.xml.soap.Node.recycleNode()|Notifies the implementation that this Node  object is no longer being used by the applicatio
|javax.xml.soap.Node.setParentElement(SOAPElement)|Sets the parent of this Node object to the given  SOAPElement object.
|javax.xml.soap.Node.setValue(String)|If this is a Text node then this method will set its value,   otherwise it sets the value

*javax.xml.soap.Node_Description*

A representation of a node (element) in an XML document. This interface extnends the standard DOM Node interface with methods 
for getting and setting the value of a node, for getting and setting the parent of a node, and for removing a node. 



*javax.xml.soap.Node.detachNode()*

public void detachNode()

Removes this Node object from the tree. 



*javax.xml.soap.Node.getParentElement()*

public |javax.xml.soap.SOAPElement| getParentElement()

Returns the parent element of this Node object. This method can throw an UnsupportedOperationException if the tree is not kept 
in memory. 



    Returns: the SOAPElement object that is the parent of this Node object or null if this Node object is root 

*javax.xml.soap.Node.getValue()*

public |java.lang.String| getValue()

Returns the value of this node if this is a Text node or the value of the immediate child of this node otherwise. If there is 
an immediate child of this Node that it is a Text node then it's value will be returned. If there is more than one Text node 
then the value of the first Text Node will be returned. Otherwise null is returned. 



    Returns: a String with the text of this node if this is a Text node or the text contained by the first immediate child of this Node 
             object that is a Text object if such a child exists; null otherwise. 

*javax.xml.soap.Node.recycleNode()*

public void recycleNode()

Notifies the implementation that this Node object is no longer being used by the application and that the implementation is 
free to reuse this object for nodes that may be created later. 

Calling the method recycleNode implies that the method detachNode has been called previously. 



*javax.xml.soap.Node.setParentElement(SOAPElement)*

public void setParentElement(javax.xml.soap.SOAPElement parent)
  throws |javax.xml.soap.SOAPException|
         
Sets the parent of this Node object to the given SOAPElement object. 


    parent - the SOAPElement object to be set as the parent of this Node object 

*javax.xml.soap.Node.setValue(String)*

public void setValue(java.lang.String value)

If this is a Text node then this method will set its value, otherwise it sets the value of the immediate (Text) child of this 
node. The value of the immediate child of this node can be set only if, there is one child node and that node is a Text node, 
or if there are no children in which case a child Text node will be created. 




