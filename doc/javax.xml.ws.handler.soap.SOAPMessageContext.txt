*javax.xml.ws.handler.soap.SOAPMessageContext* *SOAPMessageContext* The interface SOAPMessageContext 
  provides access to the S

public interface interface SOAPMessageContext

  implements |javax.xml.ws.handler.MessageContext|

|javax.xml.ws.handler.soap.SOAPMessageContext_Description|
|javax.xml.ws.handler.soap.SOAPMessageContext_Fields|
|javax.xml.ws.handler.soap.SOAPMessageContext_Constructors|
|javax.xml.ws.handler.soap.SOAPMessageContext_Methods|

================================================================================================================================

*javax.xml.ws.handler.soap.SOAPMessageContext_Methods*
|javax.xml.ws.handler.soap.SOAPMessageContext.getHeaders(QName,JAXBContext,boolean)|Gets headers that have a particular qualifi
|javax.xml.ws.handler.soap.SOAPMessageContext.getMessage()|Gets the SOAPMessage from this message context.
|javax.xml.ws.handler.soap.SOAPMessageContext.getRoles()|Gets the SOAP actor roles associated with an execution   of the handle
|javax.xml.ws.handler.soap.SOAPMessageContext.setMessage(SOAPMessage)|Sets the SOAPMessage in this message context

*javax.xml.ws.handler.soap.SOAPMessageContext_Description*

The interface SOAPMessageContext provides access to the SOAP message for either RPC request or response. The 
javax.xml.soap.SOAPMessage specifies the standard Java API for the representation of a SOAP 1.1 message with attachments. 



*javax.xml.ws.handler.soap.SOAPMessageContext.getHeaders(QName,JAXBContext,boolean)*

public |java.lang.Object|[] getHeaders(
  javax.xml.namespace.QName header,
  javax.xml.bind.JAXBContext context,
  boolean allRoles)

Gets headers that have a particular qualified name from the message in the message context. Note that a SOAP message can 
contain multiple headers with the same qualified name. 


    header - The XML qualified name of the SOAP header(s). 
    context - The JAXBContext that should be used to unmarshall the header 
    allRoles - If true then returns headers for all SOAP roles, if false then only returns headers targetted at the roles currently being 
       played by this SOAP node, see getRoles. 

    Returns: An array of unmarshalled headers; returns an empty array if no message is present in this message context or no headers match 
             the supplied qualified name. 

*javax.xml.ws.handler.soap.SOAPMessageContext.getMessage()*

public |javax.xml.soap.SOAPMessage| getMessage()

Gets the SOAPMessage from this message context. Modifications to the returned SOAPMessage change the message in-place, there is 
no need to susequently call setMessage. 



    Returns: Returns the SOAPMessage; returns null if no SOAPMessage is present in this message context 

*javax.xml.ws.handler.soap.SOAPMessageContext.getRoles()*

public |java.util.Set|<String> getRoles()

Gets the SOAP actor roles associated with an execution of the handler chain. Note that SOAP actor roles apply to the SOAP node 
and are managed using (|javax.xml.ws.soap.SOAPBinding|) and (|javax.xml.ws.soap.SOAPBinding|) . Handler instances in the 
handler chain use this information about the SOAP actor roles to process the SOAP header blocks. Note that the SOAP actor roles 
are invariant during the processing of SOAP message through the handler chain. 



    Returns: Array of String for SOAP actor roles 

*javax.xml.ws.handler.soap.SOAPMessageContext.setMessage(SOAPMessage)*

public void setMessage(javax.xml.soap.SOAPMessage message)

Sets the SOAPMessage in this message context 


    message - SOAP message 


